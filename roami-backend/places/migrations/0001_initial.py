# Generated by Django 4.2.1 on 2023-06-04 09:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlaceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('category_image', models.ImageField(upload_to='category_images')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_link', models.URLField()),
                ('place_name', models.CharField(max_length=255)),
                ('place_name_slug', models.SlugField()),
                ('description', models.CharField(max_length=2000)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('photo_1', models.ImageField(upload_to='places_images')),
                ('photo_2', models.ImageField(blank=True, null=True, upload_to='place_images')),
                ('photo_3', models.ImageField(blank=True, null=True, upload_to='places_images')),
                ('photo_4', models.ImageField(blank=True, null=True, upload_to='places_images')),
                ('photo_5', models.ImageField(blank=True, null=True, upload_to='places_images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.placecategory')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
